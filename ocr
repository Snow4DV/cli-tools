#!/bin/bash


 language="rus+eng"
 to_clip=true
 to_file=false
 dunstify=false
 ask_gpt=false
 fix_gpt=false
 

 prompt_notice=
 
 # Check the provided arguments for language and output options
 while [[ $# -gt 0 ]]; do
     key="$1"

     case $key in
         rus)
             language="rus"
             shift
             ;;
         eng)
             language="eng"
             shift
             ;;
         ruseng)
             language="rus+eng"
	     shift
	     ;;
	 engrus)
             language="eng+rus"
	     shift
	     ;;
         dunst)
             dunstify=true
             shift
             ;;
         toclip)
             to_clip=true
             shift
             ;;
         tofile)
             to_file=true
             shift
             ;;
	askgpt)
	     ask_gpt=true
	     shift
	     ;;
        vars)
	     prompt_notice="$prompt_notice Учти, что вопрос с вариантами ответов, тебе надо из них выбрать "
	     shift
	     ;;
	short)
		prompt_notice="$prompt_notice Твой ответ должен быть коротким. "
		shift
		;;
	fixgpt)
		fix_gpt=true
		shift
		;;
         *)
             echo "Unknown argument: $key"
             exit 1
             ;;
     esac
 done


contextprompt="Я дам тебе вопрос, который я отсканировал с помощью OCR, из-за чего могут быть ошибки (пропущенные буквы, цифры и так далее, может быть лишний текст). $prompt_notice Твоя задача: ответить на вопрос. В твоем ответе должен быть только ответ на вопрос. Вот отсканированный текст:"

fixprompt="You will be given badly OCRed text in $language language(s). Please normalize it (remove bad symbols, fix badly scanned words and etc). Also remove unnecessary next lines (but keep paragraphs correct). Here is text:"


# echo "$language $dunstify $to_file $to_clip"

ocr_result=$(xclip -selection clipboard -t /image/png -o | tesseract -l $language - stdout 2>/dev/null)
echo "------------OCR RESULT:-----------"
echo "$ocr_result"


if [[ "$fix_gpt" == true ]]; then
	ocr_result=$(echo "$fixprompt $ocr_result" | chatgpt-cli -n 2>/dev/null)
fi


if [[ "$ask_gpt" == true ]]; then
	ocr_result=$(echo "$contextprompt $ocr_result" | chatgpt-cli -n 2>/dev/null)
fi

if [[ "$to_file" == true ]]; then
     echo "$ocr_result" > ~/output.txt
     echo "file saved"
 fi

 if [[ "$to_clip" == true ]]; then
     echo "$ocr_result" | xsel -b -i
     echo "sent to clip"
 fi

 if [[ "$dunstify" == true ]]; then
	 echo "dunstified"
     notify-send "$ocr_result"
 fi

